# --- Class Attribetes ---
# Это перменныеБ которые принадлежат самому классу, а не его экземплярамю
# Чтобы обьявить атрибут нужно обьявит переменную внутри класса, в верхней части класса

class Comment:
    total_comments = 0  # Создание атрибута

    def __init__(self, text):
        self.text = text
        self.votes_qty = 0
        Comment.total_comments += 1  # Используем его в функции класса


firs_comment = Comment('First comment')
print(Comment.total_comments)  # Обращение к атрибуту класса

# Inheritance(наследование) - механизм позволяющий создавать новый клас на основе существующего
"""
        Принципы наследования:
        - Дочерний класс наследует атрибуты(переменные) и методы(функции)
          родительского класса. Это позволяет переиспользовать код
        - Дочерний класс может добавить новые атрибуты и методы или заменить
          методы род. класса
        - Позволяет создавать иерархии классов, где род. класс будет иметь
          баз функционал, а  доч. классы добавляют свою уник. логику
"""


class ExtendedList(list):    # Родительский класс
    def print_list_info(self):
        print(f'List has {len(self)} elements')


custom_list = ExtendedList([2, 3, 4])

print(object.__subclasses__())
